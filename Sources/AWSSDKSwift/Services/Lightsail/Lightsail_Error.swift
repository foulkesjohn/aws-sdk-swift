// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import AWSSDKSwiftCore

/// Error enum for Lightsail
public enum LightsailErrorType: AWSErrorType {
    case serviceException(message: String?)
    case invalidInputException(message: String?)
    case notFoundException(message: String?)
    case operationFailureException(message: String?)
    case accessDeniedException(message: String?)
    case accountSetupInProgressException(message: String?)
    case unauthenticatedException(message: String?)
}

extension LightsailErrorType {
    public init?(errorCode: String, message: String?){
        var errorCode = errorCode
        if let index = errorCode.firstIndex(of: "#") {
            errorCode = String(errorCode[errorCode.index(index, offsetBy: 1)...])
        }
        switch errorCode {
        case "ServiceException":
            self = .serviceException(message: message)
        case "InvalidInputException":
            self = .invalidInputException(message: message)
        case "NotFoundException":
            self = .notFoundException(message: message)
        case "OperationFailureException":
            self = .operationFailureException(message: message)
        case "AccessDeniedException":
            self = .accessDeniedException(message: message)
        case "AccountSetupInProgressException":
            self = .accountSetupInProgressException(message: message)
        case "UnauthenticatedException":
            self = .unauthenticatedException(message: message)
        default:
            return nil
        }
    }
}
