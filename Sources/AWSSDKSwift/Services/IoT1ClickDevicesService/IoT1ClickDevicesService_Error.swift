// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/noppoMan/aws-sdk-swift/blob/master/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import AWSSDKSwiftCore

/// Error enum for IoT1ClickDevicesService
public enum IoT1ClickDevicesServiceErrorType: AWSErrorType {
    case resourceNotFoundException(message: String?)
    case invalidRequestException(message: String?)
    case internalFailureException(message: String?)
    case preconditionFailedException(message: String?)
    case resourceConflictException(message: String?)
    case forbiddenException(message: String?)
    case rangeNotSatisfiableException(message: String?)
}

extension IoT1ClickDevicesServiceErrorType {
    public init?(errorCode: String, message: String?){
        var errorCode = errorCode
        if let index = errorCode.firstIndex(of: "#") {
            errorCode = String(errorCode[errorCode.index(index, offsetBy: 1)...])
        }
        switch errorCode {
        case "ResourceNotFoundException":
            self = .resourceNotFoundException(message: message)
        case "InvalidRequestException":
            self = .invalidRequestException(message: message)
        case "InternalFailureException":
            self = .internalFailureException(message: message)
        case "PreconditionFailedException":
            self = .preconditionFailedException(message: message)
        case "ResourceConflictException":
            self = .resourceConflictException(message: message)
        case "ForbiddenException":
            self = .forbiddenException(message: message)
        case "RangeNotSatisfiableException":
            self = .rangeNotSatisfiableException(message: message)
        default:
            return nil
        }
    }
}
